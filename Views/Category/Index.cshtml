@model ThreeFriends.Models.Category
@{
    ViewBag.Title = "Create Category";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/CategoryCards.css">
    <link rel="stylesheet" href="/css/CategoryIndex.css">
    <title>Modern Gradient Category Cards</title>

    <style>
        @@import url(https://fonts.googleapis.com/css?family=Raleway:400,300,500,700);
    </style>
</head>
<body>
    <div class="cards-container">
        <!-- Category Card -->
        @foreach (var category in ViewBag.CurUserCategories)
        {
            <div class="card">
                <img src="~/icons/@category.Icon" alt="Category">
                <div class="category-name">@category.Name</div>
                <div class="description">@category.Description</div>
                <div class="actions">
                    <button class="btn btn-primary btn-sm" onclick="location.href='@Url.Action("Edit", new { id = category.Id })'">Edit</button>
                    <button class="btn btn-info btn-sm" onclick="location.href='@Url.Action("Details", new { id = category.Id })'">Details</button>
                    <button class="btn btn-danger btn-sm" onclick="if(confirm('Are you sure you want to delete this category?')) location.href='@Url.Action("Delete", new { id = category.Id })'">Delete</button>
                </div>
            </div>
        }
    </div>

    <div class="cardss-container">
        <h2>@ViewBag.Title</h2>

        <form action="/Category/Create" method="post">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="Name">Category Name:</label>
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter category name" })
                @Html.ValidationMessageFor(model => model.Name , "", new { @class = "error-message" })
            </div>

            <div class="form-group">
                <label for="Description">Category Description:</label>
                @Html.TextBoxFor(model => model.Description, new { @class = "form-control", placeholder = "Enter category description" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "error-message" })
            </div>

			<div class="form-group">
				<label for="Icon">Select Icon:</label>
				<div class="dropdown">
					<button onclick="toggleDropdown()" class="dropbtn btn btn-primary" id="selectedOption" type="button">
						<span id="selectedIconText">Select an Icon</span>
					</button>
					<div id="iconDropdown" class="dropdown-content">
						<!-- Icons will be dynamically populated here -->
					</div>
            </div>
            @Html.HiddenFor(model => model.Icon) <!-- Hidden input to store the selected icon value -->
        </div>

            <button type="submit" class="btn btn-create">Create</button>
        </form>
    </div>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script>
		function toggleDropdown() {
			document.getElementById("iconDropdown").classList.toggle("show");
		}

		// Load icons when the dropdown is clicked
		document.getElementById("selectedOption").addEventListener("click", function () {
			if (document.getElementById("iconDropdown").children.length === 0) {
				loadIcons();
			}
		});

		function loadIcons() {
			var xhr = new XMLHttpRequest();
			xhr.open("GET", "@Url.Action("GetIcons")", true);
			xhr.onreadystatechange = function () {
				if (xhr.readyState === 4 && xhr.status === 200) {
					var icons = JSON.parse(xhr.responseText);
					var dropdown = document.getElementById("iconDropdown");
					dropdown.innerHTML = ""; // Clear existing options
					icons.forEach(function (icon) {
						var option = document.createElement("a");
						option.innerHTML = '<img src="/icons/' + icon.value + '" alt="' + icon.text + '" width="24" height="24"> ' + icon.text;
						option.href = "#";
						option.onclick = function () {
							selectOption(icon.value, icon.text);
						};
						dropdown.appendChild(option);
					});
				}
			};
			xhr.send();
		}

		function selectOption(value, text) {
			document.getElementById("selectedIconText").innerHTML = '<img src="/icons/' + value + '" alt="' + text + '" width="16" height="16"> ' + text;
			document.getElementById("Icon").value = value;
			document.getElementById("iconDropdown").classList.remove("show");
		}
	</script>
</body>
</html>
