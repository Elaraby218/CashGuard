@model ThreeFriends.Controllers.AnalyticsController.TransactionFilterViewModel 

@{
    ViewBag.Title = "Transaction Filtration";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction Filtration</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css">
    <style>
		body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa;
            padding: 20px;
        }
        h1, h2 {
            text-align: center;
            margin-bottom: 20px;
        }
        .box {
            background: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            margin-bottom: 20px;
        }
        .box i {
            font-size: 2em;
            margin-bottom: 10px;
        }
        .box span.text {
            display: block;
            font-size: 1.2em;
            color: #333333;
        }
        .box span.number {
            display: block;
            font-size: 2em;
            font-weight: bold;
            color: #007bff;
        }
        .statistics-overview {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
        }
        .form-section, .table-section, .charts-section, .category-section {
            background: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }
        .form-section div, .form-section label, .form-section select, .form-section input {
            margin-bottom: 10px;
            width: 100%;
        }
        .form-section button {
            margin-right: 10px;
        }
        .table thead th {
            background-color: #007bff;
            color: #ffffff;
        }
        .charts-section .chart {
            height: 300px;
        }
        .category-section .table th, .category-section .table td {
            vertical-align: middle;
        }
        .category-section .table td .progress {
            height: 20px;
            margin-bottom: 0;
        }

    </style>
</head>
<body>
    <section class="analytics">

    <h1>Analytics</h1>

    <div class="statistics-overview">
        <div class="box">
            <i class="bx bx-wallet"></i>
            <span class="text">Transaction Counts</span>
            <span class="number">@ViewBag.TransationCounts</span>
        </div>
        <div class="box">
            <i class="bx bx-upvote"></i>
            <span class="text">Total Expense Amount</span>
            <span class="number">@ViewBag.TotalExpenseAmount</span>
        </div>
        <div class="box">
            <i class="bx bx-downvote"></i>
            <span class="text">Total Income Amount</span>
            <span class="number">@ViewBag.TotalIncomeAmount</span>
        </div>
        <div class="box">
            <i class="bx bx-bar-chart-alt"></i>
            <span class="text">Average Amount</span>
            <span class="number">@ViewBag.AverageAmount</span>
        </div>
        <div class="box">
            <i class="bx bx-line-chart"></i>
            <span class="text">Max Amount</span>
            <span class="number">@ViewBag.MaxAmount</span>
        </div>
        <div class="box">
            <i class="bx bx-pie-chart-alt"></i>
            <span class="text">Min Amount</span>
            <span class="number">@ViewBag.MinAmount</span>
        </div>
    </div>

    <h2>Transaction Filtration</h2>
    <div class="form-section">
        @using (Html.BeginForm("Index", "Analytics", FormMethod.Post, new { id = "filterForm" }))
        {
            <div>
                <div>
                    @Html.LabelFor(model => model.SelectedTransactionType, "Transaction Type:")
                    @Html.DropDownListFor(model => model.SelectedTransactionType, new SelectList(Model.TransactionTypes), "Select Transaction Type", new { @class = "form-control" })
                </div>
                <div>
                    @Html.LabelFor(model => model.SelectedCategory, "Category:")
                    @Html.DropDownListFor(model => model.SelectedCategory, new SelectList(Model.Categories, "Id", "Name"), "Select Category", new { @class = "form-control" })
                </div>
                <div>
                    @Html.LabelFor(model => model.SortBy, "Sort By:")
                    @Html.DropDownListFor(model => model.SortBy, new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Date", Value = "Date", Selected = true, Disabled = true },
                        new SelectListItem { Text = "Amount", Value = "Amount" },
                        new SelectListItem { Text = "Title", Value = "Title" },
                        new SelectListItem { Text = "Category", Value = "Category" }
                    }, "Value", "Text"), "Select Sorting Option", new { @class = "form-control" })
                </div>
                <div>
                    @Html.LabelFor(model => model.SortOrder, "Sort Order:")
                    @Html.DropDownListFor(model => model.SortOrder, new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Ascending", Value = "Asc" },
                        new SelectListItem { Text = "Descending", Value = "Desc" }
                    }, "Value", "Text"), "Select Sorting Order", new { @class = "form-control" })
                </div>
            </div>
            <div>
                <div>
                    @Html.LabelFor(model => model.MinAmount, "Minimum Amount:")
                    @Html.TextBoxFor(model => model.MinAmount, new { placeholder = "Minimum Amount", @class = "form-control" })
                </div>
                <div>
                    @Html.LabelFor(model => model.MaxAmount, "Maximum Amount:")
                    @Html.TextBoxFor(model => model.MaxAmount, new { placeholder = "Maximum Amount", @class = "form-control" })
                </div>
                <div>
                    @Html.LabelFor(model => model.StartDate, "Start Date:")
                    @Html.TextBoxFor(model => model.StartDate, new { type = "date", placeholder = "Start Date", @class = "form-control" })
                </div>
                <div>
                    @Html.LabelFor(model => model.EndDate, "End Date:")
                    @Html.TextBoxFor(model => model.EndDate, new { type = "date", placeholder = "End Date", @class = "form-control" })
                </div>
            </div>
            <div>
                <button type="submit" class="btn btn-primary">Filter Transactions</button>
                <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "Analytics")'">Reset Filters</button>
            </div>
        }
    </div>

    @if (Model.Transactions != null && Model.Transactions.Any())
    {
        <div class="table-section">
            <h3>Filtered Transactions</h3>
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Title</th>
                        <th>Type</th>
                        <th>Icon</th>
                        <th>Category</th>
                        <th>Amount</th>
                        <th>Date</th>
                        <th>Info</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Model.Transactions)
                    {
                        <tr>
                            <td>@transaction.Title</td>
                            <td>@transaction.TransactionType</td>
                            <td>
                                <img src="~/icons/@transaction.Category.Icon" alt="@transaction.Category.Name Icon" width="30" height="30" />
                            </td>
                            <td>@transaction.Category?.Name</td>
                            <td>@transaction.Amount</td>
                            <td>@transaction.Timestamp.ToShortDateString()</td>
                            <td>@transaction.Info</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="table-section">
            <p>No transactions match the selected filters.</p>
        </div>
    }

    <div class="charts-section">
        <div class="row">
            <div class="col-md-6">
                <div id="barChartPreview" class="chart"></div>
            </div>
            <div class="col-md-6">
                <div id="lineChartPreview" class="chart"></div>
            </div>
        </div>
    </div>

    <div class="category-section">
        <div class="row">
            <div class="col-md-6">
                <h4>Income Categories</h4>
				<table class="table table-striped">
					<thead class="thead-light">
						<tr>
							<th>Icon</th>
							<th>Category</th>
							<th>Amount</th>
							<th>Progress</th>
						</tr>
					</thead>
					<tbody>
						<!-- Populate this table with data -->
						@foreach (var category in ViewBag.IncomeCategoriesPercentage)
						{
							<tr>
								<td><img src="@category.IconUrl" alt="@category.Title" /></td>
								<td>@category.Title</td>
								<td>@category.Amount</td>
								<td>
									<div class="progress">
										<div class="progress-bar" role="progressbar" style="width: @category.Percentage%" aria-valuenow="@category.Percentage" aria-valuemin="0" aria-valuemax="100">@category.Percentage%</div>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
            </div>
            <div class="col-md-6">
                <h4>Expense Categories</h4>
				<table class="table table-striped">
					<thead class="thead-light">
						<tr>
							<th>Icon</th>
							<th>Category</th>
							<th>Amount</th>
							<th>Progress</th>
						</tr>
					</thead>
					<tbody>
						<!-- Populate this table with data -->
						@foreach (var category in ViewBag.ExpenseCategoriesPercentage)
						{
							<tr>
								<td><img src="@category.IconUrl" alt="@category.Title" /></td>
								<td>@category.Title</td>
								<td>@category.Amount</td>
								<td>
									<div class="progress">
										<div class="progress-bar" role="progressbar" style="width: @category.Percentage%" aria-valuenow="@category.Percentage" aria-valuemin="0" aria-valuemax="100">@category.Percentage%</div>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
            </div>
        </div>
    </div>

    <div class="charts-section">
        <div class="row">
            <div class="col-md-6">
                <div id="incomePieChartPreview" class="chart"></div>
            </div>
            <div class="col-md-6">
                <div id="expensePieChartPreview" class="chart"></div>
            </div>
        </div>
    </div>
    </section>
    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script type="text/javascript">
        window.onload = function () {
            var BarChartConfiguration = @Html.Raw(ViewBag.BarChartConfig);
            var LineChartConfiguration = @Html.Raw(ViewBag.LineChartConfig);
            var IncomePieChartConfiguration = @Html.Raw(ViewBag.IncomePieChartConfig);
            var ExpensePieChartConfiguration = @Html.Raw(ViewBag.ExpensePieChartConfig);

            LineChartConfiguration.data.forEach(function (data) {
                data.dataPoints.forEach(function (dataPoint) {
                    dataPoint.x = new Date(dataPoint.x);
                });
            });

            var BarChart = new CanvasJS.Chart("barChartPreview", BarChartConfiguration);
            BarChart.render();
            var IncomePieChart = new CanvasJS.Chart("incomePieChartPreview", IncomePieChartConfiguration);
            IncomePieChart.render();
            var ExpensePieChart = new CanvasJS.Chart("expensePieChartPreview", ExpensePieChartConfiguration);
            ExpensePieChart.render();
            var LineChart = new CanvasJS.Chart("lineChartPreview", LineChartConfiguration);
            LineChart.render();
        }
    </script>
</body>
</html>
