@model ThreeFriends.Controllers.AnalyticsController.TransactionFilterViewModel

@{
    ViewBag.Title = "Transaction Filtration";
}

 @* 
<link rel="stylesheet" href="~/css/FilterCategoryTable.css" />
 *@

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.bundle.min.js"></script>


<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
   <script type="text/javascript">
	window.onload = function () {
		console.log("Hello");
        var BarChartConfiguration = @Html.Raw(ViewBag.BarChartConfig);
        var LineChartConfiguration = @Html.Raw(ViewBag.LineChartConfig);
        var IncomePieChartConfiguration = @Html.Raw(ViewBag.IncomePieChartConfig);
        var ExpensePieChartConfiguration = @Html.Raw(ViewBag.ExpensePieChartConfig);

		console.log(BarChartConfiguration);
        console.log(LineChartConfiguration);
        console.log(IncomePieChartConfiguration);
        console.log(ExpensePieChartConfiguration);

        // Fix Date in Line Chart
		LineChartConfiguration.data.forEach(function (data) { data.dataPoints.forEach(function (dataPoint) { dataPoint.x = new Date(dataPoint.x); }); });



        var BarChart = new CanvasJS.Chart("barChartPreview", BarChartConfiguration); BarChart.render();
        var IncomePieChart = new CanvasJS.Chart("incomePieChartPreivew", IncomePieChartConfiguration); IncomePieChart.render();
        var ExpensePieChart = new CanvasJS.Chart("expensePieChartPreivew", ExpensePieChartConfiguration); ExpensePieChart.render();
        var LineChart = new CanvasJS.Chart("lineChartPreview", LineChartConfiguration); LineChart.render();



        /*
			var ChartConfig2 = @Html.Raw(ViewBag.ChartConfig2);
			console.log("Before", ChartConfig2);
			ChartConfig2.data.forEach(function (data) { data.dataPoints.forEach(function (dataPoint) { dataPoint.x = new Date(dataPoint.x); }); });
			console.log("After", ChartConfig2);
			var chart2 = new CanvasJS.Chart("chartContainer2", ChartConfig2);
			chart2.render();
		*/
	}
</script>

<style>
    /* Style for form rows */
.form-row {
    margin-bottom: 20px;
}

.form-group {
    margin-bottom: 15px;
}

.col-form-label {
    font-weight: bold;
}

/* Style for buttons */
.btn {
    margin-right: 10px;
}

/* Style for table */
.table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
}

.table th,
.table td {
    padding: 8px;
    text-align: left;
}

.table th {
    background-color: #343a40;
    color: #fff;
}

.table-striped tbody tr:nth-of-type(odd) {
    background-color: #f8f9fa;
}

.table-hover tbody tr:hover {
    background-color: #e9ecef;
}

/* Grid layout for charts */
.charts-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr); /* Adjusted to show only 2 elements */
    gap: 20px;
    height: 80vh;
}

.chart-container {
    width: 100%;
    height: 100%;
    border: 1px solid #ccc;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    overflow: hidden; /* Prevent content from overflowing */
}

.chart-container > div {
    width: 100%;
    height: 100%;
}

/* Background colors for charts */
#incomePieChartPreivew {
    background-color: lightblue;
}

#expensePieChartPreivew {
    background-color: lightgreen;
}

#barChartPreview {
    background-color: lightcoral;
}

#lineChartPreview {
    background-color: lightsalmon;
}


.category-item {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 15px;
    margin-bottom: 20px;
    background-color: #f9f9f9;
    text-align: center;
}

.category-icon {
    max-width: 50px;
    max-height: 50px;
}

.progress {
    height: 20px;
    margin-top: 10px;
}

.progress-bar {
    border-radius: 5px;
}

h2 {
    margin-top: 30px;
}

.card-container {
	display: flex;
	flex-wrap: wrap;
	justify-content: flex-start;
}

.card {
	width: 200px; /* Adjust the width as needed */
	margin: 10px; /* Adjust the margin as needed */
	flex: 0 0 auto; /* Maintain fixed width */
}

</style>

<h1>Analytics</h1>
<section class="container mt-4">
    <div class="row card-container">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Transaction Counts</h5>
                <p class="card-text">@ViewBag.TransationCounts</p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Total Expense Amount</h5>
                <p class="card-text">@ViewBag.TotalExpenseAmount</p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Total Income Amount</h5>
                <p class="card-text">@ViewBag.TotalIncomeAmount</p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Average Amount</h5>
                <p class="card-text">@ViewBag.AverageAmount</p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Max Amount</h5>
                <p class="card-text">@ViewBag.MaxAmount</p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Min Amount</h5>
                <p class="card-text">@ViewBag.MinAmount</p>
            </div>
        </div>
    </div>
</section>





<h2>Transaction Filtration</h2>
<section class="container mt-4">
    @using (Html.BeginForm("Index", "Analytics", FormMethod.Post, new { id = "filterForm" }))
{
    <div class="form-row">
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.SelectedTransactionType, "Transaction Type:", htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.SelectedTransactionType, new SelectList(Model.TransactionTypes), "Select Transaction Type", new { @class = "form-control" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.SelectedCategory, "Category:", htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.SelectedCategory, new SelectList(Model.Categories, "Id", "Name"), "Select Category", new { @class = "form-control" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.SortBy, "Sort By:", htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.SortBy, new SelectList(new List<SelectListItem>
            {
                new SelectListItem { Text = "Date", Value = "Date", Selected = true, Disabled = true },
                new SelectListItem { Text = "Amount", Value = "Amount" },
                new SelectListItem { Text = "Title", Value = "Title" },
                new SelectListItem { Text = "Category", Value = "Category" }
            }, "Value", "Text"), "Select Sorting Option", new { @class = "form-control" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.SortOrder, "Sort Order:", htmlAttributes: new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.SortOrder, new SelectList(new List<SelectListItem>
            {
                new SelectListItem { Text = "Ascending", Value = "Asc" },
                new SelectListItem { Text = "Descending", Value = "Desc" }
            }, "Value", "Text"), "Select Sorting Order", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.MinAmount, "Minimum Amount:", htmlAttributes: new { @class = "col-form-label" })
            @Html.TextBoxFor(model => model.MinAmount, new { @class = "form-control", placeholder = "Minimum Amount" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.MaxAmount, "Maximum Amount:", htmlAttributes: new { @class = "col-form-label" })
            @Html.TextBoxFor(model => model.MaxAmount, new { @class = "form-control", placeholder = "Maximum Amount" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.StartDate, "Start Date:", htmlAttributes: new { @class = "col-form-label" })
            @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", type = "date", placeholder = "Start Date" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.EndDate, "End Date:", htmlAttributes: new { @class = "col-form-label" })
            @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", type = "date", placeholder = "End Date" })
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Filter Transactions</button>
        <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "Analytics")'">Reset Filters</button>
    </div>
}

</section>

	<div class="charts-grid">
		<div class="chart-container">
			<div id="barChartPreview"></div>
		</div>

		<div class="chart-container">
			<div id="lineChartPreview"></div>
		</div>
	</div>

<section class="container mt-4">
@if (Model.Transactions != null && Model.Transactions.Any())
{
    <div class="table-responsive">
		<h3>Filtered Transactions</h3>
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>Title</th>
                    <th>Type</th>
                    <th>Icon</th>
                    <th>Category</th>
                    <th>Amount</th>
                    <th>Date</th>
                    <th>Info</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in Model.Transactions)
                {
                    <tr>
                        <td>@transaction.Title</td>
                        <td>@transaction.TransactionType</td>
                        <td>
                            <img src="~/icons/@transaction.Category.Icon" />
                        </td>
                        <td>@transaction.Category?.Name</td>
                        <td>@transaction.Amount</td>
                        <td>@transaction.Timestamp.ToShortDateString()</td>
                        <td>@transaction.Info</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>No transactions match the selected filters.</p>
}
</section>


<section class="page-content page-container mt-4">
    <div class="page-content page-container" id="page-content">
        <div class="padding">
            <div class="row container d-flex justify-content-center">
                <div class="col-lg-6 grid-margin stretch-card">
                        <div class="card-body">
                            <h4 class="card-title">Income Categories</h4>
                            <p class="card-description">
                                Analysis of income categories
                            </p>
                            @if (ViewBag.IncomeCategoriesPercentage != null)
                            {
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Category</th>
                                            <th>Amount</th>
                                            <th>Progress</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var category in ViewBag.IncomeCategoriesPercentage)
                                        {
                                            <tr>
                                                <td class="py-1">
                                                    <img src="@category.IconUrl" alt="@category.Title" class="category-icon" />
                                                    @category.Title
                                                </td>
                                                <td>@category.Amount</td>
                                                <td>
                                                    <div class="progress">
                                                        <div class="progress-bar bg-success" role="progressbar" style="width: @(category.Percentage)%;" aria-valuenow="@category.Percentage" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 grid-margin stretch-card">
                        <div class="card-body">
                            <h4 class="card-title">Expense Categories</h4>
                            <p class="card-description">
                                Analysis of expense categories
                            </p>
                            @if (ViewBag.ExpenseCategoriesPercentage != null)
                            {
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Category</th>
                                            <th>Amount</th>
                                            <th>Progress</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var category in ViewBag.ExpenseCategoriesPercentage)
                                        {
                                            <tr>
                                                <td class="py-1">
                                                    <img src="@category.IconUrl" alt="@category.Title" class="category-icon" />
                                                    @category.Title
                                                </td>
                                                <td>@category.Amount</td>
                                                <td>
                                                    <div class="progress">
                                                        <div class="progress-bar bg-danger" role="progressbar" style="width: @(category.Percentage)%;" aria-valuenow="@category.Percentage" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

</section>

	<div class="charts-grid">
		<div class="chart-container">
			<div id="incomePieChartPreivew"></div>
		</div>

		<div class="chart-container">
			<div id="expensePieChartPreivew"></div>
		</div>
	</div>


@{
    /*
     * 
    if (ViewBag.IncomeCategoriesPercentage != null)
    {
        <h2>Income Categories</h2>
        <div class="row">
            @foreach (var category in @ViewBag.IncomeCategoriesPercentage)
            {
                <div class="col-md-4">
                    <div class="category-item">
                        <img src="@category.IconUrl" alt="@category.Title" class="category-icon" />
                        <h3>@category.Title</h3>
                        <p>Amount: @category.Amount</p>
                        <div class="progress">
                            <div class="progress-bar" role="progressbar" style="width: @(category.Percentage)%;" aria-valuenow="@category.Percentage" aria-valuemin="0" aria-valuemax="100">
                                <span class="sr-only">@category.Percentage%</span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    if (ViewBag.ExpenseCategoriesPercentage != null)
    {
        <h2>Expense Categories</h2>
        <div class="row">
            @foreach (var category in @ViewBag.ExpenseCategoriesPercentage)
            {
                <div class="col-md-4">
                    <div class="category-item">
                        <img src="@category.IconUrl" alt="@category.Title" class="category-icon" />
                        <h3>@category.Title</h3>
                        <p>Amount: @category.Amount</p>
                        <div class="progress">
                            <div class="progress-bar" role="progressbar" style="width: @(category.Percentage)%;" aria-valuenow="@category.Percentage" aria-valuemin="0" aria-valuemax="100">
                                <span class="sr-only">@category.Percentage%</span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

     */
}

